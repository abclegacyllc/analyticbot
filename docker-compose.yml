services:
  postgres:
    image: postgres:15-alpine
    container_name: analytic_bot_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: analytic_bot_redis
    ports:
      - "6379:6379"
    restart: always

  bot:
    container_name: analytic_bot
    build:
      context: .
      dockerfile: Dockerfile
    command: python run_bot.py
    env_file: .env
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_started }
    volumes:
      - .:/app
    restart: always

  api:
    container_name: analytic_bot_api
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn api:app --host 0.0.0.0 --port 8000
    env_file: .env
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_started }
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    restart: always

  celery_worker:
    container_name: analytic_bot_celery_worker
    build:
      context: .
      dockerfile: Dockerfile
    # --- ENG OXIRGI YECHIM ---
    working_dir: /app
    command: celery -A src.bot.celery_app worker --loglevel=info
    # -------------------------
    env_file: .env
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
    restart: always

  celery_beat:
    container_name: analytic_bot_celery_beat
    build:
      context: .
      dockerfile: Dockerfile
    # --- ENG OXIRGI YECHIM ---
    working_dir: /app
    command: celery -A src.bot.celery_app beat --loglevel=info
    # -------------------------
    env_file: .env
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
    restart: always

volumes:
  postgres_data:
